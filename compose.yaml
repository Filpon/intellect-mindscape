x-logging: &logging
  driver: "json-file"
  options:
    max-size: "10m"
    max-file: "3"

services:
  keycloak:
    build:
      context: ./keycloak
      dockerfile: Dockerfile
    image: intellect-keycloak:latest
    restart: on-failure
    user: "0"
    environment:
      KC_CLIENT_ID: ${KC_CLIENT_ID}
      KC_CLIENT_SECRET_KEY: ${KC_CLIENT_SECRET_KEY}
      KC_DB: postgres
      KC_DB_USERNAME: ${KEYCLOAK_POSTGRES_USER}
      KC_DB_PASSWORD: ${KEYCLOAK_POSTGRES_PASSWORD}
      KC_DB_URL: jdbc:postgresql://keycloak-db/${KEYCLOAK_POSTGRES_DB}
      KC_HOSTNAME_STRICT_BACKCHANNEL: false
      KC_HTTP_ENABLED: true
      KC_HOSTNAME_STRICT_HTTPS: false
      KC_HEALTH_ENABLED: true
      KC_METRICS_ENABLED: true
      KC_LOG_LEVEL: ${KC_LOG_LEVEL}
      KC_PORT: ${KC_PORT}
      KC_REALM_NAME: ${KC_REALM_NAME}
      KC_REALM_COMMON: ${KC_REALM_COMMON}
      KC_REALM_COMMON_CLIENT: ${KC_REALM_COMMON_CLIENT}
      KC_REALM_COMMON_USER: ${KC_REALM_COMMON_USER}
      KC_REALM_COMMON_USER_PASSWORD: ${KC_REALM_COMMON_USER_PASSWORD}
      KC_CORS: 'true'
      KC_CORS_MAX_AGE: '1000'
      KC_CORS_ALLOWED_METHODS: 'POST,PUT,DELETE,GET,OPTIONS'
      KC_CORS_ALLOWED_HEADERS: 'origin, content-type, accept, authorization, pragma, cache-control'
      KC_CORS_EXPOSED_HEADERS: 'origin, content-type, accept, authorization, pragma, cache-control'
      KC_CORS_ALLOWED_ORIGINS: '*'
      KEYCLOAK_ADMIN: ${KEYCLOAK_ADMIN}
      KEYCLOAK_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD}
      KEYCLOAK_POSTGRES_USER: ${KEYCLOAK_POSTGRES_USER}
      KEYCLOAK_POSTGRES_PASSWORD: ${KEYCLOAK_POSTGRES_PASSWORD}
      KEYCLOAK_POSTGRES_DB: ${KEYCLOAK_POSTGRES_DB}
      KC_BOOTSTRAP_ADMIN_USERNAME: ${KEYCLOAK_ADMIN}
      KC_BOOTSTRAP_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD}
      GF_URL: ${GF_HOSTNAME}:${GF_SERVER_HTTP_PORT}
      GF_ADMIN_USERNAME: ${GF_ADMIN_USERNAME}
      GF_ADMIN_PASSWORD: ${GF_ADMIN_PASSWORD}
      GF_HOSTNAME: ${GF_HOSTNAME}
      GF_SERVER_HTTP_PORT: ${GF_SERVER_HTTP_PORT}
    depends_on:
      db:
        condition: service_healthy
      keycloak-db:
        condition: service_healthy
    ports:
      - ${KC_PORT}:${KC_PORT}
    healthcheck:
      test: ["CMD", "curl", "-f", "http://0.0.0.0:8080/realms/${KC_REALM_NAME}"]
      start_period: 10s
      interval: 30s
      retries: 3
      timeout: 5s
    networks:
      - intellect-mindscape
    logging: *logging

  db:
    image: postgres:latest
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${BACKEND_POSTGRES_USER}", "-d", "${BACKEND_POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
    environment:
      POSTGRES_USER: ${BACKEND_POSTGRES_USER}
      POSTGRES_PASSWORD: ${BACKEND_POSTGRES_PASSWORD}
      POSTGRES_DB: ${BACKEND_POSTGRES_DB}
    networks:
      - intellect-mindscape
    volumes:
      - ./db_data:/var/lib/postgresql/data

  keycloak-db:
    image: postgres:latest
    ports:
      - "5433:5432"
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${KEYCLOAK_POSTGRES_USER}", "-d", "${KEYCLOAK_POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
    environment:
      POSTGRES_USER: ${KEYCLOAK_POSTGRES_USER}
      POSTGRES_PASSWORD: ${KEYCLOAK_POSTGRES_PASSWORD}
      POSTGRES_DB: ${KEYCLOAK_POSTGRES_DB}
    networks:
      - intellect-mindscape
    volumes:
      - ./keycloak_data:/var/lib/postgresql/data

  kafka:
    image: bitnami/kafka:${KAFKA_VERSION}
    ports:
      - ${KAFKA_PORT}:${KAFKA_PORT}  # Client connections
      - ${KAFKA_PORT_LISTENER}:${KAFKA_PORT_LISTENER}  # KRaft controller
    restart: unless-stopped
    environment:
      KAFKA_CFG_NODE_ID: 0
      KAFKA_CFG_PROCESS_ROLES: controller,broker
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: 0@kafka:${KAFKA_PORT_LISTENER}
      KAFKA_CFG_LISTENERS: PLAINTEXT://:${KAFKA_PORT},CONTROLLER://:${KAFKA_PORT_LISTENER}
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_MAX_MESSAGE_SIZE: 188743680
    depends_on:
      - zookeeper
    networks:
      - intellect-mindscape

  zookeeper:
    image: bitnami/zookeeper:${ZOOKEEPER_VERSION}
    ports:
      - ${ZOOKEEPER_PORT}:${ZOOKEEPER_PORT}
    environment:
      ALLOW_ANONYMOUS_LOGIN: yes
    networks:
      - intellect-mindscape

  kafka-ui:
    image: provectuslabs/kafka-ui:v0.7.2
    ports:
      - "8082:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: "local"
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: "kafka:9092"
    networks:
      - intellect-mindscape
    depends_on:
      - kafka

  keydb:
    image: eqalpha/keydb:latest
    ports:
      - "6379:6379"  # Expose KeyDB on port 6379
    environment:
      - KEYDB_PASSWORD=${KEYDB_PASSWORD}  # Set password for KeyDB
    command: ["keydb-server", "--requirepass", "${KEYDB_PASSWORD}"]
    networks:
      - intellect-mindscape

  admin:
    build:
      context: ./admin
      dockerfile: Dockerfile
    image: intellect-admin:latest
    environment:
      REACT_APP_NODE_MODE: ${REACT_APP_NODE_MODE} 
      REACT_APP_DOMAIN_NAME: ${REACT_APP_DOMAIN_NAME}
      REACT_APP_KEYCLOAK_URL: ${REACT_APP_KEYCLOAK_URL}
      REACT_APP_BACKEND_URL: ${REACT_APP_BACKEND_URL}
      REACT_APP_BACKEND_GAME_URL: ${REACT_APP_BACKEND_GAME_URL}
      REACT_APP_ADMIN_URL: ${REACT_APP_ADMIN_URL}
      REACT_APP_KEYCLOAK_REALM: ${KC_REALM_NAME}
      REACT_APP_KEYCLOAK_CLIENT_ID: ${KC_CLIENT_ID}
    volumes:
      - admin:/app/build
    networks:
      - intellect-mindscape
    depends_on:
      - keycloak

  auth-backend:
    build:
      context: ./auth-backend
      dockerfile: Dockerfile
    image: intellect-auth-backend:latest
    ports:
      - ${AUTH_BACKEND_PORT}:${AUTH_BACKEND_PORT}
    environment:
      - AUTH_BACKEND_PORT=${AUTH_BACKEND_PORT}
      - DATABASE_URL=${DATABASE_USERS_URL}
      - KEYCLOAK_URL=http://localhost:${KC_PORT}/auth/realms/${KC_REALM_COMMON}
      - KC_HOSTNAME=${KC_HOSTNAME}
      - KC_HOSTNAME_CONTAINER=${KC_HOSTNAME_CONTAINER}
      - KC_PORT=${KC_PORT}
      - KC_REALM_NAME=${KC_REALM_NAME}
      - KC_REALM_COMMON=${KC_REALM_COMMON}
      - KC_CLIENT_ID=${KC_CLIENT_ID}
      - KC_CLIENT_SECRET_KEY=${KC_CLIENT_SECRET_KEY}
      - KC_REALM_COMMON_CLIENT=${KC_REALM_COMMON_CLIENT}
      - KC_REALM_COMMON_USER=${KC_REALM_COMMON_USER}
      - KC_REALM_COMMON_USER_PASSWORD=${KC_REALM_COMMON_USER_PASSWORD}
      - KEYCLOAK_ADMIN=${KEYCLOAK_ADMIN}
      - KEYCLOAK_ADMIN_PASSWORD=${KEYCLOAK_ADMIN_PASSWORD}
      - KEYDB_PASSWORD=${KEYDB_PASSWORD}
      - KEYDB_PORT=${KEYDB_PORT}
      - ORIGINS=${ORIGINS}
      - KAFKA_HOSTNAME=${KAFKA_HOSTNAME}
      - KAFKA_PORT=${KAFKA_PORT}
      - KAFKA_PORT_LISTENER=${KAFKA_PORT_LISTENER}
      - REACT_APP_BACKEND_URL=${REACT_APP_BACKEND_URL}
      - REACT_APP_DOMAIN_NAME=${REACT_APP_DOMAIN_NAME}
      - TESTING=${TESTING}
    networks:
      - intellect-mindscape
    depends_on:
      - db
      - keycloak
      - keycloak-db
      - kafka
      - keydb

  auth:
    build:
      context: ./auth
      dockerfile: Dockerfile
    image: intellect-auth:latest
    environment:
      REACT_APP_NODE_MODE: ${REACT_APP_NODE_MODE} 
      REACT_APP_FRONTEND_GAME_URL: ${REACT_APP_FRONTEND_GAME_URL}
      REACT_APP_DOMAIN_NAME: ${REACT_APP_DOMAIN_NAME}
      REACT_APP_KEYCLOAK_URL: ${REACT_APP_KEYCLOAK_URL}
      REACT_APP_BACKEND_URL: ${REACT_APP_BACKEND_URL}
      REACT_APP_KEYCLOAK_REALM: ${KC_REALM_NAME}
      REACT_APP_KEYCLOAK_CLIENT_ID: ${KC_CLIENT_ID}
    volumes:
      - auth:/app/build
    networks:
      - intellect-mindscape
    depends_on:
      - auth-backend
      - keycloak

  quiz-backend-ai:
    build:
      context: ./quiz-backend-ai
      dockerfile: Dockerfile
    image: intellect-quiz-backend-ai:latest
    ports:
      - "8003:8003"
    environment:
      DATABASE_URL: ${DATABASE_URL}
      KAFKA_HOSTNAME: ${KAFKA_HOSTNAME}
      KEYDB_PASSWORD: ${KEYDB_PASSWORD}
      QDRANT_HOSTNAME: ${QDRANT_HOSTNAME}
      QDRANT_PORT: ${QDRANT_PORT}
      LARGE_LANGUAGE_MODEL_IN_USE: ${LARGE_LANGUAGE_MODEL_IN_USE}
      OLLAMA_HOSTNAME: ${OLLAMA_HOSTNAME}
      OLLAMA_PORT: ${OLLAMA_PORT}
      REACT_APP_DOMAIN_NAME: ${REACT_APP_DOMAIN_NAME}
      SENTENCE_MODEL_IN_USE: ${SENTENCE_MODEL_IN_USE}
      KAFKA_PORT: ${KAFKA_PORT}
      KEYCLOAK_URL: http://keycloak:8080/auth/realms/${KC_REALM_COMMON}
    networks:
      - intellect-mindscape
    depends_on:
      - db
      - kafka
      - keydb

  quiz-backend-api:
    build:
      context: ./quiz-backend-api
      dockerfile: Dockerfile
    image: intellect-quiz-backend-api:latest
    ports:
      - ${QUIZ_BACKEND_PORT}:${QUIZ_BACKEND_PORT}
    environment:
      - AUTH_BACKEND_PORT=${AUTH_BACKEND_PORT}
      - BACKEND_POSTGRES_USER=${BACKEND_POSTGRES_USER}
      - BACKEND_POSTGRES_PASSWORD=${BACKEND_POSTGRES_PASSWORD}
      - BACKEND_POSTGRES_DB=${BACKEND_POSTGRES_DB} 
      - DATABASE_URL=${DATABASE_URL}
      - REACT_APP_NODE_MODE=${REACT_APP_NODE_MODE}
      - ORIGINS=${ORIGINS}
      - KC_PORT=${KC_PORT}
      - KEYCLOAK_URL=http://keycloak:8080/auth/realms/${KC_REALM_COMMON}
      - QUIZ_BACKEND_PORT=${QUIZ_BACKEND_PORT}
      - REACT_APP_BACKEND_URL=${REACT_APP_BACKEND_URL}
      - REACT_APP_BACKEND_GAME_URL=${REACT_APP_BACKEND_GAME_URL}
      - REACT_APP_DOMAIN_NAME=${REACT_APP_DOMAIN_NAME}
      - REACT_APP_FRONTEND_GAME_URL=${REACT_APP_FRONTEND_GAME_URL}
      - KEYDB_PASSWORD=${KEYDB_PASSWORD}  # Set KeyDB password
      - TESTING=${TESTING}
    networks:
      - intellect-mindscape
    depends_on:
      - db
      - kafka
      - keydb

  quiz-backend-chat:
    build:
      context: ./quiz-backend-chat
      dockerfile: Dockerfile
    image: intellect-quiz-backend-chat:latest
    ports:
      - "8005:8005"
    environment:
      - DATABASE_URL=postgresql://user:password@db:5432/auth_db
      - KEYCLOAK_URL=http://keycloak:8080/auth/realms/${KC_REALM_COMMON}
    networks:
      - intellect-mindscape
    depends_on:
      - db
      - kafka
      - keydb
      - keycloak

  quiz:
    build:
      context: ./quiz
      dockerfile: Dockerfile
    image: intellect-quiz:latest
    environment:
      REACT_APP_NODE_MODE: ${REACT_APP_NODE_MODE}
      REACT_APP_DOMAIN_NAME: ${REACT_APP_DOMAIN_NAME}
      REACT_APP_BACKEND_DOMEN_CHAT: ${REACT_APP_BACKEND_DOMEN_CHAT}
      REACT_APP_FRONTEND_GAME_URL: ${REACT_APP_FRONTEND_GAME_URL}
      REACT_APP_BACKEND_GAME_URL: ${REACT_APP_BACKEND_GAME_URL}
      REACT_APP_KEYCLOAK_URL: ${REACT_APP_KEYCLOAK_URL}
      REACT_APP_BACKEND_URL: ${REACT_APP_BACKEND_URL}
      REACT_APP_KEYCLOAK_REALM: ${KC_REALM_NAME}
      REACT_APP_KEYCLOAK_CLIENT_ID: ${KC_CLIENT_ID}
    volumes:
      - quiz:/app/build
    networks:
      - intellect-mindscape
    depends_on:
      - db
      - kafka
      - keydb
      - quiz-backend-ai
      - quiz-backend-api
      - quiz-backend-chat
      - keycloak

  qdrant:
    image: qdrant/qdrant:v1.15
    restart: always
    container_name: qdrant
    ports:
      - 6333:6333
      - 6334:6334
    expose:
      - 6333
      - 6334
      - 6335
    configs:
      - source: qdrant_config
        target: /qdrant/config/production.yaml
    networks:
      - intellect-mindscape
    volumes:
      - ./qdrant_data:/qdrant/storage

  ollama:
    build:
      context: ./ollama
      dockerfile: Dockerfile
    ports:
      - "11434:11434"
    restart: unless-stopped
    networks:
      - intellect-mindscape
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:11434"]
      interval: 30s
      timeout: 10s
      retries: 3

  ollamapull:
    image: curlimages/curl:8.6.0
    command: >-
      http://ollama:11434/api/pull -d '{"name": "${LARGE_LANGUAGE_MODEL_IN_USE}"}'
    depends_on:
      ollama:
        condition: service_healthy
    networks:
      - intellect-mindscape

  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    image: intellect-nginx:latest
    ports:
      - "80:80"
    environment:
      REACT_APP_DOMAIN_NAME: ${REACT_APP_DOMAIN_NAME}
      REACT_APP_BACKEND_GAME_URL: ${REACT_APP_BACKEND_GAME_URL}
      REACT_APP_FRONTEND_GAME_URL: ${REACT_APP_FRONTEND_GAME_URL}
      REACT_APP_BACKEND_URL: ${REACT_APP_BACKEND_URL}
    networks:
      - intellect-mindscape
    depends_on:
      - admin
      - auth-backend
      - auth
      - quiz-backend-api
      - quiz-backend-chat
      - quiz
      - kafka
      - keycloak
    volumes:
      - auth:/var/www/auth
      - quiz:/var/www/quiz
      - admin:/var/www/admin

  monitoring:
    build:
      context: ./monitoring
      dockerfile: Dockerfile
    image: intellect-monitoring:latest
    ports:
      - "3003:3003"
      - "9090:9090"
      - "3100:3100"
      - "9080:9080"
    networks:
      - intellect-mindscape
    depends_on:
      - nginx

configs:
  qdrant_config:
    content: |
      log_level: INFO

volumes:
  db_data:
  keycloak_data:
  auth:
  quiz:
  admin:

networks:
  intellect-mindscape:
    driver: bridge
